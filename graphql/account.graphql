# TODO: Implement Account with Nu.ID Authentication
type Account {
    id: ID!
    username: String!
    password: String!
    role: Role!
    created_at: DateTime!
    updated_at: DateTime!
}

input UserInput {
    id: ID
    username: String
    password: String
    role: Role
}

input AuthInput {
    username: String!
    password: String! @hash
}

enum Role {
    ADMIN @enum(value: 0) # Full control
    MANAGEMENT @enum(value: 1) # read-only staticstical summary
    LECTURER @enum(value: 2) # partial read-write of relevant modules
    JUNIOR_STAFF @enum(value: 3)
    STUDENT @enum(value: 4)
    PARENT @enum(value: 5)
    GUEST @enum(value: 6)
}

extend type Query {
    me: Account @auth
    login(input: AuthInput! @spread): Account @find
    logout: Account @guard
    users(id: ID): [Account!]! @all
}

extend type Query {
    createUser(input: UserInput! @spread): Account @create
    updateUser(input: UserInput! @spread): Account @update
    upsertUser(input: UserInput! @spread): Account @upsert
    deleteUser(id: ID! @eq): Account @delete
}
