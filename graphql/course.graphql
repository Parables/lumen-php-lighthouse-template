# Object Type
type Course {
    id: ID!
    title: String!
    courseCode: String!
    creditHours: Int
    books: [Book!] @belongsToMany
    created_at: DateTime!
    updated_at: DateTime!
}

# Input Type
input CourseCreateInput {
    title: String @trim
    courseCode: String @trim
    creditHours: Int
    books: BookOperations
}

# Input Type
input CourseUpdateInput {
    id: ID!
    title: String @trim
    courseCode: String @trim
    creditHours: Int
    books: BookOperations
}

# Single Nested Mutations
input CourseOperation {
    create: CourseCreateInput!
    connect: ID!
    update: CourseUpdateInput!
    upsert: CourseCreateInput!
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# List Nested Mutations
input CourseOperations {
    create: [CourseCreateInput!]
    connect: [ID!]
    update: [CourseUpdateInput!]
    upsert: [CourseCreateInput!]
    sync: [ID!]
    syncWithoutDetaching: [ID!]
    delete: [ID!]
    disconnect: [ID!]
}

# Query
extend type Query {
    course(id: ID! @eq): Course @find
    courses(title: String @where(operator: "%LIKE%")): [Course!]! @all
}

# Mutation
extend type Mutation {
    createCourse(input: CourseCreateInput! @spread): Course @create
    updateCourse(input: CourseUpdateInput! @spread): Course @update
    upsertCourse(input: CourseCreateInput! @spread): Course @upsert
    deleteCourse(id: ID! @eq): Course @delete
}
