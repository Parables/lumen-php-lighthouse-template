# Object Type #
type Programme {
    id: ID!
    title: String!
    programmeCode: String
    startLevel: Int!
    endLevel: Int!
    fees(level: Int @eq): [Fee!] @hasMany
    programmeOutlines(level: Int @eq, semester: Int @eq): [ProgrammeOutline!] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
}

# Create Input Type #
input CreateProgrammeInput {
    title: String! @trim
    programmeCode: String @trim
    startLevel: Int!
    endLevel: Int!
    fees: FeesOperation
    programmeOutlines: ProgrammeOutlinesOperation
}

# Update Input Type #
input UpdateProgrammeInput {
    id: ID!
    title: String @trim
    programmeCode: String @trim
    startLevel: Int
    endLevel: Int
    fees: FeesOperation
    programmeOutlines: ProgrammeOutlinesOperation
}

# Upsert Input Type #
input UpsertProgrammeInput {
    id: ID!
    title: String! @trim
    programmeCode: String @trim
    startLevel: Int!
    endLevel: Int!
    fees: FeesOperation
    programmeOutlines: ProgrammeOutlinesOperation
}

# Single Nested Mutations
input ProgrammeOperation {
    create: CreateProgrammeInput
    connect: ID
    update: UpdateProgrammeInput
    upsert: UpsertProgrammeInput
}

# Query
extend type Query {
    programme(id: ID! @eq): Programme @find
    programmes: [Programme!] @all
}

# Mutation
extend type Mutation {
    createProgramme(input: CreateProgrammeInput! @spread): Programme @create
    updateProgramme(input: UpdateProgrammeInput! @spread): Programme @update
    upsertProgramme(input: UpsertProgrammeInput! @spread): Programme @upsert
    deleteProgramme(id: ID! @eq): Programme @delete
}
