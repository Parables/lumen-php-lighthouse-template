type Book {
    id: ID!
    cover: String!
    title: String!
    bookCode: String!
    author: String!
    inStock: Int!
    courses: [Course!]! @belongsToMany
    createdAt: DateTime!
    updatedAt: DateTime!
}

input BookInput {
    id: ID @eq
    cover: String
    title: String
    bookCode: String
    author: String
    inStock: Int
    courses: CreateCourseBelongsTo
}


input CreateCourseBelongsTo {
    create: [CourseInput!]
    connect: [ID!]
    update: [CourseInput!]
    upsert: [CourseInput!]
    sync: [ID!]
    syncWithoutDetaching: [ID!]
    delete: [ID!]
    disconnect: [ID!]
}

extend type Query {
    book(id: Int! @eq): Book @find
    books(
        title: String @where(operator: "like")
        bookCode: String @eq
        author: String @where(operator: "%LIKE%")
        inStock: Int @eq
        courses: [Int!] @in(key: "book_course.")
    ): [Book!]! @all
}

extend type Mutation {
    createBook(input: BookInput! @spread): Book @create
    updateBook(input: BookInput! @spread): Book @update
    upsertBook(input: BookInput! @spread): Book @upsert
    deleteBook(id: ID! @eq): Book @delete
}
