# Object Type
type PaymentRecord {
    id: ID!
    transactionDate: DateTime!
    transactionID: String!
    bank: SelectOption! @belongsTo
    bankBranch: SelectOption! @belongsTo
    amountPaid: Float!
    paidBy: Student! @belongsTo
    paymentMethod: SelectOption! @belongsTo
    # recordedBy: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

# Create Input Type
input PaymentRecordCreateInput {
    transactionDate: DateTime!
    transactionID: String!
    bank: SelectOptionOperation!
    bankBranch: SelectOptionOperation!
    amountPaid: Float!
    student: StudentOperation!
    paymentMethod: SelectOptionOperation!
    # recordedBy: UserOperation
}

# Update Input Type
input PaymentRecordUpdateInput {
    id: ID
    transactionDate: DateTime
    transactionID: String
    bank: SelectOptionOperation
    bankBranch: SelectOptionOperation
    amountPaid: Float
    student: StudentOperation
    paymentMethod: SelectOptionOperation
    # recordedBy: UserOperation
}

# Single Nested Mutations
input PaymentRecordOperation {
    create: PaymentRecordCreateInput!
    connect: ID!
    update: PaymentRecordUpdateInput!
    upsert: PaymentRecordCreateInput!
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# List Nested Mutations
input PaymentRecordOperations {
    create: [PaymentRecordCreateInput!]
    connect: ID!
    update: [PaymentRecordUpdateInput!]
    upsert: [PaymentRecordCreateInput!]
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# Query
extend type Query {
    paymentRecord(id: Int! @eq): PaymentRecord @find
    paymentRecords: [PaymentRecord!] @all
}

# Mutation
extend type Mutation {
    createPaymentRecord(input: PaymentRecordCreateInput! @spread): PaymentRecord
        @create
    updatePaymentRecord(input: PaymentRecordUpdateInput! @spread): PaymentRecord
        @update
    upsertPaymentRecord(input: PaymentRecordCreateInput! @spread): PaymentRecord
        @upsert
    deletePaymentRecord(id: ID! @eq): PaymentRecord @delete
}
