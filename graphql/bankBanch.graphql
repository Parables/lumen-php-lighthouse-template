# Object Type
type BankBranch {
    id: ID!
    bank: Bank @belongsTo
    branch: String
    createdAt: DateTime!
    updatedAt: DateTime!
}

# Input Type
input BankBranchInput {
    id: ID
    bank: BankInput
    branch: String
}

# Single Nested Mutations
input BankBranchOperation {
    create: BankBranchInput!
    connect: ID!
    update: BankBranchInput!
    upsert: BankBranchInput!
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# List Nested Mutations
input BankBranchOperations {
    create: [BankBranchInput!]
    connect: ID!
    update: [BankBranchInput!]
    upsert: [BankBranchInput!]
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# Query
extend type Query {
    bankBranch(id: Int! @eq): BankBranch @find
    bankBranches: [BankBranch!] @all
}

# Mutation
extend type Mutation {
    createBankBranch(input: BankBranchInput! @spread): BankBranch @create
    updateBankBranch(input: BankBranchInput! @spread): BankBranch @update
    upsertBankBranch(input: BankBranchInput! @spread): BankBranch @upsert
    deleteBankBranch(id: ID! @eq): BankBranch @delete
}
