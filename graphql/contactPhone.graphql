# Object Type
type Phone {
    id: ID!
    phoneNumber: String!
    isPrimary: Boolean
    contact: Contact! @belongsTo
}

# Input Type
input PhoneInput {
    id: ID
    phoneNumber: String
    isPrimary: Boolean
    contact: ContactOperation
}

# Single Nested Mutations
input PhoneOperation {
    create: PhoneInput!
    connect: ID!
    update: PhoneInput!
    upsert: PhoneInput!
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# List Nested Mutations
input PhoneOperations {
    create: [PhoneInput!]
    connect: ID!
    update: [PhoneInput!]
    upsert: [PhoneInput!]
    sync: ID!
    syncWithoutDetaching: ID!
    delete: ID!
    disconnect: ID!
}

# Query
extend type Query {
    phone(id: Int! @eq): Phone @find
    phones: [Phone!] @all
}

# Mutation
extend type Mutation {
    createPhone(input: PhoneInput! @spread): Phone @create
    updatePhone(input: PhoneInput! @spread): Phone @update
    upsertPhone(input: PhoneInput! @spread): Phone @upsert
    deletePhone(id: ID! @eq): Phone @delete
}
